---
- name: Deploy Backend via Ansible (produção)
  hosts: backend
  become: true
  collections:
    - community.docker

  vars:
    repo_url: 'https://github.com/wbrunovieira/revalidaItaliaBackNestJS.git'
    app_dir: /home/ubuntu/app
    compose_file: compose.prod.yml

  pre_tasks:
    - name: Atualiza cache do apt
      apt:
        update_cache: yes

    - name: Instala dependências do Docker
      apt:
        name:
          - docker.io
          - git
          - curl
        state: latest

    - name: Cria diretório de plugins do Docker
      file:
        path: /usr/local/lib/docker/cli-plugins
        state: directory
        mode: '0755'

    - name: Instala Docker Compose V2
      get_url:
        url: https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64
        dest: /usr/local/lib/docker/cli-plugins/docker-compose
        mode: '0755'

    - name: Adiciona ubuntu ao grupo docker
      user:
        name: ubuntu
        groups: docker
        append: yes

  tasks:
    - name: Clona ou atualiza o código
      git:
        repo: '{{ repo_url }}'
        dest: '{{ app_dir }}'
        version: main
        force: yes
      become_user: ubuntu

    - name: Instala pnpm globalmente
      shell: npm install -g pnpm
      args:
        executable: /bin/bash

    - name: Instala dependências do projeto
      shell: pnpm install
      args:
        chdir: '{{ app_dir }}'
        executable: /bin/bash

    - name: Gera arquivos Prisma
      shell: pnpm exec prisma generate
      args:
        chdir: '{{ app_dir }}'
        executable: /bin/bash

    - name: Aplica migrações
      shell: pnpm exec prisma migrate deploy
      args:
        chdir: '{{ app_dir }}'
        executable: /bin/bash

    - name: Gera build do projeto
      shell: pnpm build
      args:
        chdir: '{{ app_dir }}'
        executable: /bin/bash

    - name: Garante diretório de logs do Postgres
      file:
        path: '{{ app_dir }}/logs/db'
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'

    - name: Gera arquivo de ambiente (.env)
      template:
        src: 'templates/.env.prod.j2'
        dest: '{{ app_dir }}/.env'
        owner: ubuntu
        group: ubuntu
        mode: '0600'
      become_user: ubuntu

    - name: Faz pull da imagem com Docker Compose V2
      community.docker.docker_compose_v2_pull:
        project_src: '{{ app_dir }}'
        files:
          - '{{ compose_file }}'

    - name: Derruba containers antigos
      shell: docker compose -f {{ compose_file }} down
      args:
        chdir: '{{ app_dir }}'
      ignore_errors: yes

    - name: Sobe os containers com Docker Compose V2
      community.docker.docker_compose_v2:
        project_src: '{{ app_dir }}'
        files:
          - '{{ compose_file }}'
        state: present
