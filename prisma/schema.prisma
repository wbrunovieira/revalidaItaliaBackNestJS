generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64", "linux-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =====================================
// = Entidades principais (agrupamentos)
// =====================================

model Track {
  id        String   @id @default(uuid())
  slug      String   @unique
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações:
  trackCourses TrackCourse[]
  translations TrackTranslation[]
}

model TrackCourse {
  track   Track  @relation(fields: [trackId], references: [id])
  trackId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@id([trackId, courseId])
}

model Course {
  id        String   @id @default(uuid())
  slug      String   @unique
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações:
  modules      Module[]
  translations CourseTranslation[]
  videoLinks   CourseVideoLink[]

  trackCourses TrackCourse[]
}

model Module {
  id       String  @id @default(uuid())
  slug     String  @unique
  imageUrl String?
  order    Int

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações:

  lessons      Lesson[]
  translations ModuleTranslation[]
  videoLinks   ModuleVideoLink[]
}

model Video {
  id                String  @id @default(uuid())
  slug              String  @unique
  imageUrl          String?
  providerVideoId   String
  durationInSeconds Int
  isSeen            Boolean @default(false)
  lesson            Lesson  @relation(fields: [lessonId], references: [id])
  lessonId          String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relações:
  translations VideoTranslation[]
  videosSeen   VideoSeen[]
  videoLinks   VideoLink[]
}

// =======================================
// = Tabelas de tradução (multilíngue)
// =======================================

model TrackTranslation {
  id          String @id @default(uuid())
  locale      String
  title       String
  description String
  track       Track  @relation(fields: [trackId], references: [id])
  trackId     String

  @@unique([trackId, locale])
}

model CourseTranslation {
  id          String @id @default(uuid())
  locale      String // "pt", "it" ou "es"
  title       String
  description String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@unique([courseId, locale])
}

model ModuleTranslation {
  id          String @id @default(uuid())
  locale      String // "pt", "it" ou "es"
  title       String
  description String

  module   Module @relation(fields: [moduleId], references: [id])
  moduleId String

  @@unique([moduleId, locale])
}

model VideoTranslation {
  id          String @id @default(uuid())
  locale      String // "pt", "it" ou "es"
  title       String
  description String

  video   Video  @relation(fields: [videoId], references: [id])
  videoId String

  @@unique([videoId, locale])
}

// ===========================================
// = Tabelas de links de vídeo por idioma
// ===========================================

model VideoLink {
  id          String  @id @default(uuid())
  locale      String // "pt", "it" ou "es"
  streamUrl   String
  downloadUrl String?

  video   Video  @relation(fields: [videoId], references: [id])
  videoId String

  @@unique([videoId, locale])
}

model CourseVideoLink {
  id     String @id @default(uuid())
  locale String // "pt", "it" ou "es"
  url    String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@unique([courseId, locale])
}

model ModuleVideoLink {
  id     String @id @default(uuid())
  locale String // "pt", "it" ou "es"
  url    String

  module   Module @relation(fields: [moduleId], references: [id])
  moduleId String

  @@unique([moduleId, locale])
}

// ====================================
// = Demais entidades auxiliares
// ====================================

model VideoSeen {
  id     String   @id @default(uuid())
  seenAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  video   Video  @relation(fields: [videoId], references: [id])
  videoId String

  @@unique([userId, videoId])
}

model User {
  id              String    @id @default(uuid())
  name            String
  email           String    @unique
  password        String
  cpf             String    @unique
  phone           String?
  paymentToken    String?
  birthDate       DateTime?
  lastLogin       DateTime?
  profileImageUrl String?
  role            String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  Address    Address[]
  videosSeen VideoSeen[]
}

model Address {
  id         String   @id @default(uuid())
  userId     String
  street     String
  number     String
  complement String?
  district   String?
  city       String
  state      String?
  country    String
  postalCode String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
}

model Lesson {
  id           String   @id @default(uuid())
  module       Module   @relation(fields: [moduleId], references: [id])
  moduleId     String   @unique
  imageUrl     String?
  videoId      String?
  flashcardIds String[] @default([])
  quizIds      String[] @default([])
  commentIds   String[] @default([])

  documents LessonDocument[]

  translations LessonTranslation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Video     Video[]
}

model LessonTranslation {
  id          String  @id @default(uuid())
  locale      String // ex: "pt", "it", "es"
  title       String
  description String?

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId String

  @@unique([lessonId, locale])
}

model LessonDocument {
  id       String @id @default(uuid())
  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId String

  url      String
  filename String?

  translations LessonDocumentTranslation[]

  createdAt DateTime @default(now())
}

model LessonDocumentTranslation {
  id          String  @id @default(uuid())
  locale      String
  title       String
  description String?

  document   LessonDocument @relation(fields: [documentId], references: [id])
  documentId String

  @@unique([documentId, locale])
}
