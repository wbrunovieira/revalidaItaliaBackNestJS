#@BASE_URL = http://localhost:3333

@BASE_URL = http://18.216.107.74:3333

###
# @name create-account
POST {{BASE_URL}}/students
Content-Type: application/json

{
  "name": "admin Super",
  "email": "admin@revalidaitalia.com.br",
  "password": "Senha123!",
  "role": "admin",
  "cpf": "12145678914"
}
###
###
# @name create-account-tutor
POST {{BASE_URL}}/students
Content-Type: application/json

{
  "name": "Professor 2",
  "email": "professor2@revalidaitalia.com.br",
  "password": "Senha123!",
  "role": "tutor",
  "cpf": "78655443456"
}
###


### 1. Create Admin Account
# @name createAdmin
POST {{BASE_URL}}/students
Content-Type: application/json

{
  "name": "Admin User",
  "email": "admin@admin.com",
  "password": "Admin123!",
  "role": "admin",
  "cpf": "16809704859"
}

###

###
# @name login
POST {{BASE_URL}}/auth/login
Content-Type: application/json

{
  "email": "bruno@wbdigitalsolutions.com",
  "password": "Senha123!"
}
###
@token = {{login.response.body.access_token}}

### 4. Login as Admin
# @name adminLogin
POST {{BASE_URL}}/auth/login
Content-Type: application/json

{
  "email": "admin@admin.com",
  "password": "Admin123!"
}

###
@adminToken = {{adminLogin.response.body.accessToken}}

###
# @name update-account
PATCH {{BASE_URL}}/students/45348fe3-9683-4101-aaf2-e4483ffabcf5
Content-Type: application/json

{
  "name": "Walter Bruno P. Vieira (Atualizado)",
  "email": "wbrunovieira53_atualizado@yahoo.com.br",
  "cpf": "12745678901",
  "role": "student"
}
###

### ====================================
### LIST USERS TESTS
### ====================================

### 5. List Users (Admin only)
# @name listUsersSuccess
GET {{BASE_URL}}/students
Authorization: Bearer {{adminToken}}

###

### 7. List Users with Pagination
# @name listUsersPaginated
GET {{BASE_URL}}/students?page=1&pageSize=2
Authorization: Bearer {{adminToken}}



### 8. List Users - Page 2
# @name listUsersPage2
GET {{BASE_URL}}/students?page=2&pageSize=2
Authorization: Bearer {{adminToken}}


### ====================================
### DELETE USER TESTS
### ====================================

### 6. Admin Delete User - Success
# @name adminDeleteUser
DELETE {{BASE_URL}}/students/c7e0851f-b53a-4794-a182-b8f600b934ba
Authorization: Bearer {{adminToken}}


### ====================================
### FIND/SEARCH USERS TESTS
### ====================================

### 9. Find Users - No filters (returns all)
# @name findUsersAll
GET {{BASE_URL}}/students/search
Authorization: Bearer {{adminToken}}

###

### 10. Find Users - By Name
# @name findUsersByName
GET {{BASE_URL}}/students/search?name=Bruno
Authorization: Bearer {{adminToken}}

###

### 11. Find Users - By Email
# @name findUsersByEmail
GET {{BASE_URL}}/students/search?email=bruno@wbdigitalsolutions.com
Authorization: Bearer {{adminToken}}

###

### 12. Find Users - By CPF
# @name findUsersByCpf
GET {{BASE_URL}}/students/search?cpf=98765432100
Authorization: Bearer {{adminToken}}

###

### 13. Find Users - Multiple Filters (Name + Email)
# @name findUsersMultipleFilters
GET {{BASE_URL}}/students/search?name=Walter&email=bruno@wbdigitalsolutions.com
Authorization: Bearer {{adminToken}}

###

### 14. Find Users - With Pagination
# @name findUsersWithPagination
GET {{BASE_URL}}/students/search?page=1&pageSize=5
Authorization: Bearer {{adminToken}}

###

### 15. Find Users - Name with Pagination
# @name findUsersByNamePaginated
GET {{BASE_URL}}/students/search?name=User&page=1&pageSize=2
Authorization: Bearer {{adminToken}}

###

### 16. Find Users - No Results (non-existent name)
# @name findUsersNoResults
GET {{BASE_URL}}/students/search?name=NonExistentUser123456
Authorization: Bearer {{adminToken}}

###

### 17. Find Users - Partial Name Match
# @name findUsersPartialName
GET {{BASE_URL}}/students/search?name=Walt
Authorization: Bearer {{adminToken}}

###

### 18. Find Users - All Filters Combined
# @name findUsersAllFilters
GET {{BASE_URL}}/students/search?name=Walter&email=bruno@wbdigitalsolutions.com&cpf=12145678900&page=1&pageSize=10
Authorization: Bearer {{adminToken}}

###

### 19. Find Users - Without Authorization (should fail)
# @name findUsersUnauthorized
GET {{BASE_URL}}/students/search?name=Bruno

###

### 20. Find Users - With Student Token (should fail - admin only)
# @name findUsersAsStudent
GET {{BASE_URL}}/students/search?name=Bruno
Authorization: Bearer {{token}}

###

### ====================================
### ADDITIONAL DYNAMIC TESTS
### ====================================

### 30. Create Test User for ID Testing
# @name createTestUser
POST {{BASE_URL}}/students
Content-Type: application/json

{
  "name": "Test User for ID",
  "email": "testuser@example.com",
  "password": "Test123!",
  "role": "student",
  "cpf": "98765432100"
}

###

### 31. Get Test User By ID (using dynamic ID)
# @name getTestUserById
GET {{BASE_URL}}/students/{{createTestUser.response.body.user.id}}
Authorization: Bearer {{adminToken}}

###

### 32. Delete Test User (cleanup)
# @name deleteTestUser
DELETE {{BASE_URL}}/students/{{createTestUser.response.body.user.id}}
Authorization: Bearer {{adminToken}}

###